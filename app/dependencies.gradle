def dependencyGroup(Closure closure) {
    closure.delegate = dependencies
    return closure
}

def local = dependencyGroup {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

def ui = dependencyGroup {
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"
    implementation "com.android.support:cardview-v7:$supportLibVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    kapt "com.android.databinding:compiler:$gradleVersion"
}

def di = dependencyGroup {
    implementation "com.google.dagger:dagger-android:$dagger2Version"
    implementation "com.google.dagger:dagger-android-support:$dagger2Version" // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:$dagger2Version"
    kapt "com.google.dagger:dagger-compiler:$dagger2Version"
}

def androidArchLifecycle = dependencyGroup{
    implementation "android.arch.lifecycle:extensions:$rootProject.archLifecycleVersion"
    kapt "android.arch.lifecycle:compiler:$rootProject.archLifecycleVersion"

}

def rx = dependencyGroup {
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
}

def network = dependencyGroup {

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.squareup.moshi:moshi-adapters:$moshiVersion"
    implementation "se.ansman.kotshi:api:$kotshiVersion"
    kapt "se.ansman.kotshi:compiler:$kotshiVersion"

    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    implementation "com.facebook.stetho:stetho:$stethoVersion"
    implementation "com.facebook.stetho:stetho-okhttp3:$stethoVersion"
}
def database = dependencyGroup {
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"
}

def util = dependencyGroup {
    implementation "com.jakewharton.timber:timber:$timberVersion"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanary"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
}

def image = dependencyGroup {
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"
}

def test = dependencyGroup {
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powerMockVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:1.5.0"
    testImplementation "com.google.code.findbugs:jsr305:3.0.2"
    testImplementation "android.arch.persistence.room:testing:$roomTesting"
    testImplementation "android.arch.core:core-testing:$livedataTesting"

    androidTestImplementation "com.android.support:support-annotations:$supportLibVersion"
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.1'
    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
    androidTestImplementation('com.android.support.test.espresso:espresso-contrib:3.0.1') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestImplementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    androidTestImplementation 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
    androidTestImplementation "com.google.code.findbugs:jsr305:3.0.2"
    androidTestImplementation "android.arch.persistence.room:testing:$roomTesting"
    androidTestImplementation "android.arch.core:core-testing:$livedataTesting"
}

dependencies {
    local()

    ui()
    di()
    androidArchLifecycle()
    rx()
    network()
    database()
    util()
    image()
    test()
}
